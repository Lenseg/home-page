{"remainingRequest":"/Users/lens/projects/home-page/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lens/projects/home-page/src/components/interfaces.vue?vue&type=template&id=a7e8692c&","dependencies":[{"path":"/Users/lens/projects/home-page/src/components/interfaces.vue","mtime":1665661310097},{"path":"/Users/lens/projects/home-page/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lens/projects/home-page/node_modules/vuetify-loader/lib/loader.js","mtime":1658754911000},{"path":"/Users/lens/projects/home-page/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lens/projects/home-page/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/lens/projects/home-page/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1655712169000},{"path":"/Users/lens/projects/home-page/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lens/projects/home-page/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}